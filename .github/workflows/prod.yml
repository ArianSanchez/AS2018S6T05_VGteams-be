name: CI/CD main branch with publish image to Container Registry and deploy to GKE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: vg-teams     # TODO: update to cluster name
  GKE_ZONE: us-east1-d      # TODO: update to cluster zone
  DEPLOYMENT_NAME: vg-teams-be # TODO: update to deployment name
  IMAGE: vg-teams-be

jobs:
#  changes:
#    runs-on: ubuntu-latest
#    # Set job outputs to values from filter step
#    outputs:
#      backend: ${{ steps.filter.outputs.backend }}
#    steps:
#      - uses: actions/checkout@v2
#      # For pull requests it's not necessary to checkout the code
#      - uses: dorny/paths-filter@v2
#        id: filter
#        with:
#          filters: |
#            backend:
#              - 'src/**'
  ci-cd:
#    needs: changes
#    if: ${{ needs.changes.outputs.backend == 'true' }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: 'Set up JDK 1.11'
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: 'Cache Gradle packages'
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 'Build with Gradle'
        run: ./gradlew build -x test

      #      - name: 'Test with Gradle'
      #        run: ./gradlew test

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          version: "290.0.1"
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Configure Docker para usar la herramienta de línea de comandos de gcloud como credencial
      # Ayudante para la autenticación
      - run: |-
          gcloud --quiet auth configure-docker
      # Obtenga las credenciales de GKE para que podamos implementar en el clúster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      # Construye la imagen de Docker
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      # Envíe la imagen de Docker a Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
      # Configurar kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
      # Implementa la imagen de Docker en el clúster de GKE

      - name: Desplegando Kubernetes
        id: Deploy-Kubernetes
        run: |-
          ./kustomize edit set image busybox=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/vg-teams-be

